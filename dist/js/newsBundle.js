(()=>{"use strict";const e=new class{async get(e){const t=await fetch(e);return await t.json()}async post(e,t){const a=await fetch(e,{method:"POST",headers:{"Content-type":"application/json"},body:JSON.stringify(t)});return await a.json()}async update(e,t){const a=await fetch(e,{method:"PUT",body:{"Content-type":"application;/json"},headers:JSON.stringify(t)});return await a.json()}async delete(e){return await fetch(e,{method:"Delete"}),await"Resource Deleted..."}};document.getElementById("burgerMenu").addEventListener("click",(e=>{e.preventDefault(),e.currentTarget.classList.toggle("burgerActive"),document.getElementById("navbar").classList.toggle("menuActive")}));const t=new class{constructor(){this.topNav=document.getElementById("nav-data"),this.total,this.exchanges,document.querySelector("#total")&&document.querySelector("#markets")&&(this.total=document.querySelector("#total").firstElementChild,this.exchanges=document.querySelector("#markets").firstElementChild)}async getMarketData(t){await e.get(t).then((e=>{!function(e,t,a,n){const s=parseFloat(e.data.market_cap_change_percentage_24h_usd).toFixed(2);let i;i=s>0?`<i class="fas fa-caret-up"></i> <b>${s}%</b>`:s<0?`<i class="fas fa-caret-down"></i> <b>${s.replace("-","")}%</b>`:`${s}%`,t.innerHTML=`<li><div><span>Total Market Cap: </span><a href='global.html'>$${parseFloat(e.data.total_market_cap.usd.toFixed(0)).toLocaleString()}</a><span> ${i}</span></div></li>\n  <li>24h Vol: <a href='global.html'>$${parseFloat(e.data.total_volume.usd.toFixed(0)).toLocaleString().replace(".",",")}</a></li>\n  <li>Btc dominance: <b>${parseFloat(e.data.market_cap_percentage.btc).toFixed(2)}%</b></li>`;let o=t.firstChild.firstChild.firstChild.nextElementSibling.nextElementSibling;parseFloat(s)>0?(o.style.color="green",o.querySelector("i").style.color="green"):parseFloat(s)<0?(o.style.color="red",o.querySelector("i").style.color="red"):o.style.color="#333333",a&&n&&(a.innerHTML=`Coins: <span class="span-info">${e.data.active_cryptocurrencies}</span>`,n.innerHTML=`Exchanges: <span class="span-info">${e.data.markets}</span>`)}(e,this.topNav,this.total,this.exchanges)})).catch((e=>{console.log(e),location.reload()})),""!==this.topNav.innerHTML&&void 0!==this.topNav.innerHTML&&null!==this.topNav.innerHTML||location.reload(),setTimeout((function(){const e=document.getElementById("nav-data");""!==e.innerHTML&&void 0!==e.innerHTML&&null!==e.innerHTML||location.reload()}),1e3)}},a=new class{constructor(){this.info=document.getElementById("news-info"),this.main=document.getElementById("main")}getData(e){document.getElementById("load").style.visibility="visible",document.getElementById("footer").style.visibility="visible";let t="";for(let a=0;a<e.length;a++){const n=new Date(e[a].created_at).toDateString();let s="anon",i="";const o=e[a].project.type.toLowerCase(),c=/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,l=e[a].description.replace(c,(e=>`<a href="${e}" class="link" target ="_blank">${e}</a>`));e[a].project.symbol&&(i=e[a].project.symbol),e[a].user&&(s=e[a].user),t+=`\n      <div class='card'>\n      <div class='topInfo'>\n      <span class='timeStamp'>${n}</span>\n      <div class='category'><span class='${e[a].category}'>${e[a].category.replace("_"," ")}</span><span class='${o}'>${o}</span></div>\n      </div>\n      <span class="description">${l}</span>\n      <div class='projectInfo'>\n      <div class='project'>\n      <img src='${e[a].project.image.thumb}' alt='${e[a].project.name}'><span>${e[a].project.name}</span><span>${i}</span>\n      </div>\n      <span><b>Author</b>: ${s}, ${e[a].user_title}</span>\n      </div>\n      </div>\n      `}this.main.innerHTML+=t}},n=document.getElementsByClassName("category");let s=1;async function i(t){document.getElementById("wait-circle").classList="loader",await e.get(t).then((e=>a.getData(e.status_updates))).catch((e=>console.log(e)));const n=document.getElementById("main").innerHTML;""!==n&&null!=n||i(t),document.getElementById("wait-circle").classList="hidden"}async function o(e,t){e.preventDefault(),t||s++,document.getElementById("load").style.visibility="hidden";const a=`https://api.coingecko.com/api/v3/status_updates?${document.getElementById("main").className}per_page=10&page=${s}`;await i(a),document.getElementById("load").style.visibility="visible"}document.addEventListener("DOMContentLoaded",t.getMarketData("https://api.coingecko.com/api/v3/global")),document.addEventListener("DOMContentLoaded",i("https://api.coingecko.com/api/v3/status_updates?per_page=10")),document.addEventListener("DOMContentLoaded",function(){for(let e=0;e<n.length;e++)n[e].addEventListener("click",(t=>{t.preventDefault();const a=document.getElementById("main");if(n[e].classList.contains("clicked"))n[e].classList.remove("clicked"),a.className="";else{s=1,a.className=n[e].id;for(let e=0;e<n.length;e++)n[e].classList.remove("clicked");n[e].classList.add("clicked")}a.innerHTML="",o(t,a)}))}()),document.getElementById("load").addEventListener("click",o)})();